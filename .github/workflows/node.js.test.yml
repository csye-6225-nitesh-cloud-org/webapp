# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
name: Node.js CI with PostgreSQL

on:
  pull_request:
    branches: [ "main" ]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Intsall PostgreSQL
      run: |
        sudo apt update
        sudo apt install -y postgresql postgresql-contrib
        sudo systemctl start postgresql    

    - name: Configure PostgreSQL
      run: |
        sudo -u postgres psql -c "CREATE DATABASE ${{secrets.DB_NAME}};"
        sudo -u postgres psql -c "CREATE USER ${{ secrets.DB_USER }} WITH PASSWORD '${{ secrets.DB_PASSWORD }}';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.DB_NAME }} TO ${{ secrets.DB_USER }};"

    - name: Configure Environment Variables
      run: |
        echo > .env
        ls -al | grep .env
        echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo HOSTNAME=${{ secrets.HOSTNAME }} >> .env
    
    - name: Install Dependencies and Run Tests
      run: npm i

    - name: " Run Tests"
      run: npm test
