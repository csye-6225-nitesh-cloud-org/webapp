# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
name: Node.js CI with PostgreSQL

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
         - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - run: npm i
    - run: |
        echo > .env
        ls -al | grep .env
        echo NODE_ENV=${{ secrets.ENVIRONMENT }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo HOSTNAME=${{ secrets.HOSTNAME }} >> .env
      name: " Run Tests"
    - run: npm test
